pipeline:
  name: Ecommerse
  identifier: Ecommerse
  projectIdentifier: default_project
  orgIdentifier: default
  tags: {}
  properties:
    ci:
      codebase:
        connectorRef: githubarvind
        build: <+input>
  stages:
    - stage:
        name: microservicesBuild
        identifier: microservicesBuild
        description: ""
        type: CI
        spec:
          cloneCodebase: true
          caching:
            enabled: true
            override: true
          buildIntelligence:
            enabled: true
          platform:
            os: Linux
            arch: Amd64
          runtime:
            type: Cloud
            spec: {}
          execution:
            steps:
              - step:
                  type: BuildAndPushDockerRegistry
                  name: Cart_Build_And_Push
                  identifier: Cart_Build_And_Push
                  spec:
                    connectorRef: dockerhubarvind
                    repo: arvindpdige/cart
                    tags:
                      - <+pipeline.variables.TAG>
                    caching: true
                    dockerfile: /harness/cart-cna-microservice/Dockerfile
                    context: /harness/cart-cna-microservice/
              - step:
                  type: BuildAndPushDockerRegistry
                  name: Products_Build_And_Push
                  identifier: ProductBuildAndPushDockerRegistry
                  spec:
                    connectorRef: dockerhubarvind
                    repo: arvindpdige/products
                    tags:
                      - <+pipeline.variables.TAG>
                    caching: true
                    dockerfile: /harness/products-cna-microservice/Dockerfile
              - step:
                  type: BuildAndPushDockerRegistry
                  name: Store_Build_And_Push
                  identifier: StoreBuildAndPushDockerRegistry
                  spec:
                    connectorRef: dockerhubarvind
                    repo: arvindpdige/store
                    tags:
                      - <+pipeline.variables.TAG>
                    caching: true
                    dockerfile: /harness/store-ui/Dockerfile
                    context: /harness/store-ui/
              - step:
                  type: BuildAndPushDockerRegistry
                  name: Search_Build_And_Push
                  identifier: SearchBuildAndPushDockerRegistry
                  spec:
                    connectorRef: dockerhubarvind
                    repo: arvindpdige/search
                    tags:
                      - <+pipeline.variables.TAG>
                    caching: true
                    dockerfile: /harness/search-cna-microservice/Dockerfile
                    context: /harness/search-cna-microservice/
              - step:
                  type: BuildAndPushDockerRegistry
                  name: Users_Build_And_Push
                  identifier: UsersBuildAndPushDockerRegistry
                  spec:
                    connectorRef: dockerhubarvind
                    repo: arvindpdige/users
                    tags:
                      - <+pipeline.variables.TAG>
                    caching: true
                    dockerfile: /harness/users-cna-microservice/Dockerfile
                    context: /harness/users-cna-microservice/
    - stage:
        name: E_Commerse_App
        identifier: E_Commerse_App
        description: ""
        type: Deployment
        spec:
          deploymentType: Kubernetes
          service:
            serviceRef: Ecommicroservices
          environment:
            environmentRef: minikube
            deployToAll: false
            infrastructureDefinitions:
              - identifier: minikubeinfra
          execution:
            steps:
              - step:
                  name: Rollout Deployment
                  identifier: rolloutDeployment
                  type: K8sRollingDeploy
                  timeout: 10m
                  spec:
                    skipDryRun: false
                    pruningEnabled: false
            rollbackSteps:
              - step:
                  name: Rollback Rollout Deployment
                  identifier: rollbackRolloutDeployment
                  type: K8sRollingRollback
                  timeout: 10m
                  spec:
                    pruningEnabled: false
        tags: {}
        failureStrategies:
          - onFailure:
              errors:
                - AllErrors
              action:
                type: StageRollback
        variables:
          - name: TAG
            type: String
            description: ""
            required: true
            value: v7
  variables:
    - name: TAG
      type: String
      description: ""
      required: true
      value: v8
