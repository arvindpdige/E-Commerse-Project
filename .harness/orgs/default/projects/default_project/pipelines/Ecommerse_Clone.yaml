pipeline:
  projectIdentifier: default_project
  orgIdentifier: default
  tags: {}
  properties:
    ci:
      codebase:
        connectorRef: githubarvind
        build: <+input>
  stages:
    - stage:
        name: microservicesBuild
        identifier: microservicesBuild
        description: ""
        type: CI
        spec:
          cloneCodebase: true
          caching:
            enabled: true
            override: true
          buildIntelligence:
            enabled: true
          platform:
            os: Linux
            arch: Amd64
          runtime:
            type: Cloud
            spec: {}
          execution:
            steps:
              - step:
                  type: Run
                  name: Run_1
                  identifier: Run_1
                  spec:
                    connectorRef: dockerhubarvind
                    image: gradle:8.14.3-jdk17
                    shell: Sh
                    command: |-
                      gradle -v
                      which gradle
                      cd cart-cna-microservice/
                      gradle clean
                      gradle test 
                      gradle build
                    reports:
                      type: JUnit
                      spec:
                        paths:
                          - cart-cna-microservice/build/test-results/**/*.xml
              - stepGroup:
                  name: Microservices_build_and_push
                  identifier: Microservices_build_and_push
                  steps:
                    - step:
                        type: BuildAndPushDockerRegistry
                        name: Cart_Build_And_Push
                        identifier: Cart_Build_And_Push
                        spec:
                          connectorRef: dockerhubarvind
                          repo: arvindpdige/cart
                          tags:
                            - <+pipeline.variables.TAG>
                          caching: true
                          dockerfile: /harness/cart-cna-microservice/Dockerfile
                          context: /harness/cart-cna-microservice/
                    - step:
                        type: BuildAndPushDockerRegistry
                        name: Products_Build_And_Push
                        identifier: ProductBuildAndPushDockerRegistry
                        spec:
                          connectorRef: dockerhubarvind
                          repo: arvindpdige/products
                          tags:
                            - <+pipeline.variables.TAG>
                          caching: true
                          dockerfile: /harness/products-cna-microservice/Dockerfile
                    - step:
                        type: BuildAndPushDockerRegistry
                        name: Store_Build_And_Push
                        identifier: StoreBuildAndPushDockerRegistry
                        spec:
                          connectorRef: dockerhubarvind
                          repo: arvindpdige/store
                          tags:
                            - <+pipeline.variables.TAG>
                          caching: true
                          dockerfile: /harness/store-ui/Dockerfile
                          context: /harness/store-ui/
                    - step:
                        type: BuildAndPushDockerRegistry
                        name: Search_Build_And_Push
                        identifier: SearchBuildAndPushDockerRegistry
                        spec:
                          connectorRef: dockerhubarvind
                          repo: arvindpdige/search
                          tags:
                            - <+pipeline.variables.TAG>
                          caching: true
                          dockerfile: /harness/search-cna-microservice/Dockerfile
                          context: /harness/search-cna-microservice/
                    - step:
                        type: BuildAndPushDockerRegistry
                        name: Users_Build_And_Push
                        identifier: UsersBuildAndPushDockerRegistry
                        spec:
                          connectorRef: dockerhubarvind
                          repo: arvindpdige/users
                          tags:
                            - <+pipeline.variables.TAG>
                          caching: true
                          dockerfile: /harness/users-cna-microservice/Dockerfile
                          context: /harness/users-cna-microservice/
    - stage:
        name: Canary_Approve
        identifier: Canary_Approve
        description: ""
        type: Approval
        spec:
          execution:
            steps:
              - step:
                  name: approval
                  identifier: approval
                  type: HarnessApproval
                  timeout: 1d
                  spec:
                    approvalMessage: |-
                      Please review the following information
                      and approve the pipeline progression
                    includePipelineExecutionHistory: true
                    approvers:
                      minimumCount: 1
                      disallowPipelineExecutor: false
                      userGroups:
                        - account._account_all_users
                        - _project_all_users
                        - org._organization_all_users
                    isAutoRejectEnabled: false
                    approverInputs: []
        tags: {}
    - stage:
        name: Blue-green
        identifier: Bluegreen
        description: ""
        type: Deployment
        spec:
          deploymentType: Kubernetes
          service:
            serviceRef: Ecommicroservices
          environment:
            environmentRef: minikube
            deployToAll: false
            infrastructureDefinitions:
              - identifier: minikubeinfra
          execution:
            steps:
              - step:
                  name: Stage Deployment
                  identifier: stageDeployment
                  type: K8sBlueGreenDeploy
                  timeout: 10m
                  spec:
                    skipDryRun: false
                    pruningEnabled: false
              - step:
                  name: Swap primary with stage service
                  identifier: bgSwapServices
                  type: K8sBGSwapServices
                  timeout: 10m
                  spec:
                    skipDryRun: false
            rollbackSteps:
              - step:
                  name: Swap primary with stage service
                  identifier: rollbackBgSwapServices
                  type: K8sBGSwapServices
                  timeout: 10m
                  spec:
                    skipDryRun: false
        tags: {}
        failureStrategies:
          - onFailure:
              errors:
                - AllErrors
              action:
                type: StageRollback
        when:
          pipelineStatus: All
    - stage:
        name: Canary
        identifier: Canary
        description: ""
        type: Deployment
        spec:
          deploymentType: Kubernetes
          service:
            serviceRef: Ecommicroservices
          environment:
            environmentRef: minikube
            deployToAll: false
            infrastructureDefinitions:
              - identifier: minikubeinfra
          execution:
            steps:
              - stepGroup:
                  name: Canary Deployment
                  identifier: canaryDeployment
                  steps:
                    - step:
                        name: Canary Deployment
                        identifier: canaryDeployment
                        type: K8sCanaryDeploy
                        timeout: 10m
                        spec:
                          instanceSelection:
                            spec:
                              percentage: 20
                            type: Percentage
                          skipDryRun: false
                          trafficRouting:
                            spec:
                              routes:
                                - route:
                                    type: http
                                    name: route1
                                    destinations:
                                      - destination:
                                          host: stable
                                      - destination:
                                          host: canary
                              name: virtual-service-<+service.name>
                            provider: istio
              - stepGroup:
                  name: Primary Deployment
                  identifier: primaryDeployment
                  steps:
                    - step:
                        name: Rolling Deployment
                        identifier: rollingDeployment
                        type: K8sRollingDeploy
                        timeout: 10m
                        spec:
                          skipDryRun: false
              - step:
                  name: Canary Delete
                  identifier: canaryDelete
                  type: K8sCanaryDelete
                  timeout: 10m
                  spec: {}
            rollbackSteps:
              - step:
                  name: Canary Delete
                  identifier: rollbackCanaryDelete
                  type: K8sCanaryDelete
                  timeout: 10m
                  spec: {}
              - step:
                  name: Rolling Rollback
                  identifier: rollingRollback
                  type: K8sRollingRollback
                  timeout: 10m
                  spec: {}
        tags: {}
        failureStrategies:
          - onFailure:
              errors:
                - AllErrors
              action:
                type: StageRollback
  variables:
    - name: TAG
      type: String
      description: ""
      required: true
      value: v9
  notificationRules:
    - name: pipeline_execution
      identifier: pipeline_execution
      pipelineEvents:
        - type: PipelineFailed
      notificationMethod:
        type: Email
        spec:
          userGroups: []
          recipients:
            - arvinddige@virtusa.com
      enabled: true
  identifier: Ecommerse_Clone
  name: Ecommerse - Clone
